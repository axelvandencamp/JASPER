-- Function: _crm_partnerinfo()

-- DROP FUNCTION _crm_partnerinfo();

CREATE OR REPLACE FUNCTION _crm_partnerinfo(
    OUT partner_id integer, 
	OUT lidnummer character varying, 
	OUT geslacht character varying,
	OUT voornaam character varying,
	OUT achternaam character varying,
	OUT voornaam_lidkaart character varying,
	OUT achternaam_lidkaart character varying,
	OUT birthday date,
	OUT leeftijd double precision,
	OUT building character varying,
	OUT straat character varying,
	OUT huisnummer character varying, 
	OUT bus character varying,
	OUT postcode character varying,
	OUT woonplaats character varying,
	OUT postbus character varying,
	OUT provincie text,
	OUT land text,
	OUT email character varying,
	OUT telefoonnr character varying,
	OUT gsm character varying,
	OUT membership_state character varying,
	OUT Afdeling character varying
	)
  RETURNS SETOF record AS
$BODY$
BEGIN
	RETURN QUERY SELECT
		p.id, 
		p.membership_nbr lidnummer, 
		p.gender AS geslacht,
		p.first_name as voornaam,
		p.last_name as achternaam,
		CASE
			WHEN COALESCE(p6.id,0)>0 AND p6.membership_state = 'none' AND CHAR_LENGTH(p6.first_name) > 0 THEN p.first_name || ' en ' || p6.first_name ELSE p.first_name
		END voornaam_lidkaart,
		CASE
			WHEN COALESCE(p6.id,0)>0 AND p6.membership_state = 'none' AND CHAR_LENGTH(p6.last_name) > 0 THEN p.last_name || ' - ' || p6.last_name ELSE p.last_name
		END achternaam_lidkaart,
		p.birthday,
		EXTRACT(YEAR from AGE(p.birthday)) leeftijd,
		p.street2 building,
		CASE
			WHEN c.id = 21 AND p.crab_used = 'true' THEN ccs.name
			ELSE p.street
		END straat,
		CASE
			WHEN c.id = 21 AND p.crab_used = 'true' THEN p.street_nbr ELSE ''
		END huisnummer, 
		p.street_bus bus,
		CASE
			WHEN c.id = 21 AND p.crab_used = 'true' THEN cc.zip
			ELSE p.zip
		END postcode,
		CASE 
			WHEN c.id = 21 THEN cc.name ELSE p.city 
		END woonplaats,
		p.postbus_nbr postbus,
		CASE
			WHEN p.country_id = 21 AND substring(p.zip from '[0-9]+')::numeric BETWEEN 1000 AND 1299 THEN 'Brussel' 
			WHEN p.country_id = 21 AND (substring(p.zip from '[0-9]+')::numeric BETWEEN 1500 AND 1999 OR substring(p.zip from '[0-9]+')::numeric BETWEEN 3000 AND 3499) THEN 'Vlaams Brabant'
			WHEN p.country_id = 21 AND substring(p.zip from '[0-9]+')::numeric BETWEEN 2000 AND 2999  THEN 'Antwerpen' 
			WHEN p.country_id = 21 AND substring(p.zip from '[0-9]+')::numeric BETWEEN 3500 AND 3999  THEN 'Limburg' 
			WHEN p.country_id = 21 AND substring(p.zip from '[0-9]+')::numeric BETWEEN 8000 AND 8999  THEN 'West-Vlaanderen' 
			WHEN p.country_id = 21 AND substring(p.zip from '[0-9]+')::numeric BETWEEN 9000 AND 9999  THEN 'Oost-Vlaanderen' 
			WHEN p.country_id = 21 THEN 'WalloniÃ«'
			WHEN p.country_id = 166 THEN 'Nederland'
			WHEN NOT(p.country_id IN (21,166)) THEN 'Buitenland niet NL'
			ELSE 'andere'
		END AS provincie,
		_crm_land(c.id) land,
		p.email,
		COALESCE(p.phone_work,p.phone) telefoonnr,
		p.mobile gsm,
		p.membership_state huidige_lidmaatschap_status,
		COALESCE(COALESCE(a2.name,a.name),'onbekend') Afdeling
		FROM res_partner p
	--Voor de ontdubbeling veroorzaakt door meedere lidmaatschapslijnen
	--LEFT OUTER JOIN (SELECT * FROM _av_myvar v, membership_membership_line ml JOIN product_product pp ON pp.id = ml.membership_id WHERE  ml.date_to BETWEEN v.startdatum and v.einddatum AND pp.membership_product) ml ON ml.partner = p.id
	--idem: versie voor jaarwisseling (januari voor vorige jaar)
	--LEFT OUTER JOIN (SELECT * FROM membership_membership_line ml JOIN product_product pp ON pp.id = ml.membership_id WHERE  ml.state = 'paid' AND pp.membership_product) ml ON ml.partner = p.id
	--land, straat, gemeente info
	JOIN res_country c ON p.country_id = c.id
	LEFT OUTER JOIN res_country_city_street ccs ON p.street_id = ccs.id
	LEFT OUTER JOIN res_country_city cc ON p.zip_id = cc.id
	--herkomst lidmaatschap
	--LEFT OUTER JOIN res_partner_membership_origin mo ON p.membership_origin_id = mo.id
	--aangemaakt door 
	--JOIN res_users u ON u.id = p.create_uid
	--afdeling vs afdeling eigen keuze
	LEFT OUTER JOIN res_partner a ON p.department_id = a.id
	LEFT OUTER JOIN res_partner a2 ON p.department_choice_id = a2.id
	--bank/mandaat info
	--door bank aan mandaat te linken en enkel de mandaat info te nemen ontdubbeling veroorzaakt door meerdere bankrekening nummers
	--LEFT OUTER JOIN (SELECT pb.id pb_id, pb.partner_id pb_partner_id, sm.id sm_id, sm.state sm_state FROM res_partner_bank pb JOIN sdd_mandate sm ON sm.partner_bank_id = pb.id WHERE sm.state = 'valid') sm ON pb_partner_id = p.id
	--facturen info
	--LEFT OUTER JOIN account_invoice_line il ON il.id = ml.account_invoice_line
	--LEFT OUTER JOIN account_invoice i ON i.id = il.invoice_id
	--aanspreking
	LEFT OUTER JOIN res_partner_title pt ON p.title = pt.id
	--parnter info
	LEFT OUTER JOIN res_partner a3 ON p.id = a3.id
	LEFT OUTER JOIN res_partner p6 ON p.relation_partner_id = p6.id
	;
END; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100
  ROWS 1000;
ALTER FUNCTION _crm_partnerinfo()
    OWNER TO axelvandencamp;
GRANT EXECUTE ON FUNCTION public._crm_partnerinfo() TO public;
GRANT EXECUTE ON FUNCTION public._crm_partnerinfo() TO axelvandencamp;
