-- Function: _crm_ledenoudepartnernieuwlid(text, date)

-- DROP FUNCTION _crm_ledenoudepartnernieuwlid(text, date);

CREATE OR REPLACE FUNCTION _crm_ledenoudepartnernieuwlid(
    IN lidnummer text,
    IN begindatum date,
    OUT id integer,
    OUT create_date date,
    OUT check_date date,
    OUT lidmaatschap_startdatum date,
    OUT r bigint)
  RETURNS SETOF record AS
$BODY$
BEGIN
	RETURN QUERY
	SELECT ml.partner id, ml.create_date::date create_date, SQ2.check_date, ml.date_from, SQ2.r_max r
	FROM res_partner p
		JOIN membership_membership_line ml ON p.id = ml.partner
		-------------------------------------------
		-- SQ2: MAX(r) voor total_rows() te krijgen
		-------------------------------------------
		JOIN	(SELECT SQ1.partner, SQ1.check_date, MAX(r_) r_max
			FROM (
				---------------------------------------------------------------------
				-- SQ1: r (row_number) toewijzen aan elke membership_line per partner
				---------------------------------------------------------------------
				SELECT ml.partner, ROW_NUMBER() OVER (PARTITION BY ml.partner ORDER BY ml.id DESC) AS r_,
					COALESCE(bsl.write_date::date,aml2.last_rec_date) check_date
				FROM membership_membership_line ml 
					--factuur info
					JOIN account_invoice_line il ON il.id = ml.account_invoice_line
					JOIN account_invoice i ON i.id = il.invoice_id
					--parnter info
					LEFT OUTER JOIN res_partner a3 ON i.partner_id = a3.id
					--boeking info
					JOIN account_move_line aml1 ON aml1.move_id = i.move_id
					JOIN account_move_line aml2 ON aml2.reconcile_id = aml1.reconcile_id AND aml2.id <> aml1.id
					--RU
					LEFT OUTER JOIN account_bank_statement bs ON bs.id = aml2.statement_id AND (bs.state = 'confirm' AND (bs.name LIKE '%-221-%' OR bs.name LIKE '%-029-%'))
					LEFT OUTER JOIN account_bank_statement_line bsl ON bs.id = bsl.statement_id AND bsl.partner_id = ml.partner
					--product info
					JOIN product_product pp ON pp.id = ml.membership_id
				WHERE pp.membership_product  AND i.state = 'paid' 
					--AND ml.partner = 296532
				--------------------------------------------------------------- SQ1 -
				) SQ1
			GROUP BY SQ1.partner, SQ1.check_date) SQ2
		------------------------------------- SQ2 -
		ON p.id = SQ2.partner
	WHERE p.membership_nbr < lidnummer AND (ml.create_date::date >= begindatum OR SQ2.check_date >= begindatum) --begindatum
		AND SQ2.r_max = 1;
 
END; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100
  ROWS 1000;
ALTER FUNCTION _crm_ledenoudepartnernieuwlid(text, date)
  OWNER TO odbcreadonly;
